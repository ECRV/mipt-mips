#summary Some knowlegde on SVN branches and Google Code specifics of it
#labels Phase-Requirements,Phase-QA
=Introduction=
----
== What is a branch?==

One of the features of version control systems is the ability to isolate changes onto a separate line of development. This line is known as a _branch_. Branches are often used to try out new features without disturbing the main line of development with compiler errors and bugs. As soon as the new feature is stable enough then the development branch is merged back into the main branch (_trunk_).

Another feature of version control systems is the ability to mark particular revisions (e.g. a release version), so you can at any time recreate a certain build or environment. This process is known as _tagging_.

== Does svn support branches?==

Subversion does not have special commands for branching or tagging, but uses so-called “cheap copies” instead. Cheap copies are similar to hard links in Unix, which means that instead of making a complete copy in the repository, an internal link is created, pointing to a specific tree/revision. As a result branches and tags are very quick to create, and take up almost no extra space in the repository.

||<font color="red">*Note:*</font> for more information about branches you can read the corresponding chapter in the svn-book ([http://svnbook.red-bean.com/en/1.7/svn.branchmerge.html Eng]/[http://svnbook.red-bean.com/ru/1.4/svn.branchmerge.html Rus]).||

<br>
= Branches in our project =
----

== Rules and policies ==
We have special place to create branches in our svn. It is `http://mipt-mips.googlecode.com/svn/branches/2013/`.

The name of your branch folder should begin from the first letter of your name and your surname. For example, for _Alexander Titov_ it will be `atitov`. Then after underscore `task` word, and after underscore, the task number. You will get names like these examples:

  * `atitov_task_1`
  * `pkryukov_task_3`
  * `kgarifullin_task_4`

You are allowed to create own branches not connected with main tasks. To name these branches you also must use your surname, short description of the branch, and underscores as separators: `pikryukov_decoder`, `atitov_ports`, `atitov_scheduler_optimization`, etc.

||<font color="red"><b>Note:</b></font> When you commit changes into your branch you have to add `[branch]` prefix in the beginning of your comment.<br>See [SVNCheatSheet#Commit_messages SVN cheat sheet] for more information on commit prefixes.||

== Creating a branch ==

First of all you should decided which files will be copied into your branch folder. Usually a whole trunk is copied as copying is almost free for svn. However, it is a good style to copy only those files that you need. Don't worry to forget something, you will be able to copy it later.

Then create a name for your branch folder. It must follow [WorkingWithSvnBranches#Rules_and_policies our rules] presented above.

After that you just have to copy selected files. The copy process depends on the system you are using.

=== Linux ===

Use the following svn command to create an svn branch and copy files into it:
{{{
svn copy <URL_of_svn_folder_to_copy> https://mipt-mips.googlecode.com/svn/branches/2013/<name_of_your_branch_folder> \
    -m "[branch] <reason_to_create_a_branch>"
}}}

For example, if you want to create a branch folder with the name `atitov_task_1` and to copy the whole content of `trunk` folder there, you have to enter the following command:
{{{
svn copy https://mipt-mips.googlecode.com/svn/trunk https://mipt-mips.googlecode.com/svn/branches/2013/atitov_task_1 \
    -m "[branch] create a branch for the first assignment"
}}}

If you want to add something else into your branch folder just use the same command:
{{{
svn copy <URL_of_one_more_folder_to_copy> <URL_of_target_folder> \
    -m "[branch] <describe_what_you_added>"
}}}

=== TortoiseSVN ===
|| <font color="red"><b>Note!</b></font> Even if you use TortoiseSVN read the previous section. ||

To create a branch using TortoiseSVN you have to perform the following steps:

 * Right click on the folder in your working copy that you want to copy (in fact, you can copy the whole your working copy) -- *point 1*.
 * Then select _TortoiseSVN_ -> _Branch/tag_ -- *point 2*.<br /><img src="http://mipt-mips.googlecode.com/svn/wiki/images/tortoise-svn/create_branch_1.png" width="650">
 * In the window that appeared enter `https://mipt-mips.googlecode.com/svn/branches/2013/<name_of_your_branch_folder>` into _To URL_ field (in the example on the figure the name is `atitov_task_1`) -- *point 3*.
 * Select _HEAD Revision in the repository_ -- *point 4*.
 * Enter a proper comment into _Log message_ field and press _OK_ -- *point 5*.<br /><img src="http://mipt-mips.googlecode.com/svn/wiki/images/tortoise-svn/create_branch_2.png" width="650">

== Working with branches: checkout, commit, update ==

To start work with your branch (i.e. add files, commit changes and so on) you have to checkout it. The procedure is absolutely the same as for [HowToMakeYourFirstSVNCommit checkout of the trunk], but you have to use URL of your branch folder (`https://mipt-mips.googlecode.com/svn/branches/2013/<name_of_your_branch_folder>`) instead of URL of the trunk folder (`https://mipt-mips.googlecode.com/svn/trunk`):

<img src="http://mipt-mips.googlecode.com/svn/wiki/images/tortoise-svn/checkout_branch.png" width="650">

|| <font color="red"><b>Warning!</b></font> Don't checkout your branch into the folder which has already under revision control (i.e. has folder `.svn`). It won't work! ||

All other commands and actions are also the same as if you work with trunk. Excepts the fact that they will be performed not to the `trunk` folder in the repository on the svn server, but to your branch folder.

|| <font color="red"><b>Please</b></font>, don't forget to use `[branch]` prefix in your commit messages.||