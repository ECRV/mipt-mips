#summary Instructions how to connect to ILab servers using SSH

= Introduction =

[http://ilab.mipt.ru/ ILab] provides to the MIPT-MIPS project two servers, Helena and Julia. You can use them for code editing, compiling, testing, running. In fact, it is allowed to develop code on any other platform (for example, on Windows using MS Visual Studio), but you have to check that it is compiled and works correctly on iLab servers.

The most important feature of this servers is GNU Assembler and Linker for MIPS instruction set that are installed there. They will be strongly needed for many further tasks.

||<font color="red">*Note:*</font> if you have any problem with instructions written below ask the project owners by [mailto:Kryukov@frtk.ru this e-mail address]||

----

= What is SSH =

[http://en.wikipedia.org/wiki/Secure_Shell SSH] is a secure variant of [http://en.wikipedia.org/wiki/Telnet Telnet]: a protocol for controlling a computer by another one though a network.

After you have connected via SSH, you may work on a remote server as if it is your local computer. To avoid mistakes, your shell will be named as server, for example:

`vasiliy.pupkin@helena:~/$`

Remember, that actually it is *not* your computer. Therefore can be no your favorite programs, no settings and no access to your files. You have to set them manually or copy from your PC (see below how to do it).

----

= Installing SSH =

== PuTTY ==

[http://en.wikipedia.org/wiki/PuTTY PuTTY] is a tiny SSH client for Windows. It has both interfaces: GUI and console. It can be downloaded [http://the.earth.li/~sgtatham/putty/latest/x86/putty.exe here]

We recommend to use PuTTY if you are a Windows user.

== OpenSSH ==

[http://en.wikipedia.org/wiki/OpenSSH OpenSSH] is CUI client for Linux and Windows. On Linux, it is usually preinstalled on most of distributives (check it by typing ` ssh --help`), if not, you may always downolad it:

  * `sudo apt-get install ssh`
  * `sudo pacman -S ssh`

or somehow else.

----

= How to connect =

Before we start, the table with credential information of our servers is presented below:

|| *Name* || *Address* || *Port* ||
|| *Helena* || `helena.ilab.mipt.ru` || `8022` ||
|| *Julia* || `julia.ilab.mipt.ru` || `6022` ||

||<font color="red">*Note:*</font> We have to use only a login and password that were provided by the administrator of ILab. If you haven't got it, let us now by [mailto:Kryukov@frtk.ru this e-mail address].||

||<font color="red">*Note:*</font> This instruction was made assuming that you are connecting from the MIPT local network. If you are connecting from other network and have some problems, please, let us know by [mailto:Kryukov@frtk.ru this e-mail address].||

More information about our servers and network resources you find in this [http://wiki.ilab.mipt.ru/index.php/Сервера_лаборатории ILab Wiki page].


== PuTTY (GUI) Settings ==

  # Open PuTTY
  # Type the server address (e.g. `helena.ilab.mipt.ru`) and the port in the _Session_ window.
  # Select _SSH_ radiobutton
  # Name your session (e.g. `helena.ilab.mipt`)
  # Press _Save_ button. 
  # Next time you're not required to fill all these setting, just double click on your session name.
  # Press 'Open' button, enter you login and password.

<img src="https://uarch-sim.googlecode.com/svn/wiki/images/putty_connection_settings.png" width=500>

== PuTTY (CUI) Setting ==

Typing command

  * `putty -P <port> <login>@<address>`
  * `putty -P 8022 poupkine@helena.ilab.mipt.ru`
  * `putty -P 6022 poupkine@julia.ilab.mipt.ru`

will give you same result as in previous paragraph

== OpenSSH Setting ==

Just type

  * `ssh -p <port> <login>@<address>`
     For example, `ssh -p 8022 vasiliy.pupkin@helena.ilab.mipt.ru`

then type your password and you're free to work.

----

= Copying files =

To copy file, you need to use console tools. OpenSSH provides command 'scp', and PuTTY provides you 'pscp'. Syntax of them is common, so below we will use only 'scp'.

||<font color="red">*Note:*</font> SCP command can be executed only on your local machine.||

== Copy file from your machine to server ==

`scp -P <port> <localpath> <login>@<address>:<remotepath>`

Example:

`scp -P 8022 my.new.file poupkine@helena.ilab.mipt.ru:~\uarchsim`

||<font color="red">*Note:*</font> SCP uses *-P* (capital) flag instead of *-p*||

== Copy file from server to your machine ==

`scp -P <port> <login>@<address>:<remotepath> <localpath>`

Example:

`scp -P 8022 poupkine@helena.ilab.mipt.ru:~\simulator\new.log .`

||<font color="green">*Hint:*</font> SCP syntax is similar to syntax of common CP command, `cp <from> <to>`||